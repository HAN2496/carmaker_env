import numpy as np

class Cone:
    def __init__(self, type):
        self.type = type
        if type == 1:
            self.create_DLC_cone()

    def create_DLC_cone(self):
        cones = np.array([
            [50 + 3 * 0, -8.0525 - 1.9748 / 2], [50 + 3 *0, -8.0525 + 1.9748 / 2],
            [50 + 3 * 1, -8.0525 - 1.9748 / 2], [50 + 3 *1, -8.0525 + 1.9748 / 2],
            [50 + 3 * 2, -8.0525 - 1.9748 / 2], [50 + 3 *2, -8.0525 + 1.9748 / 2],
            [50 + 3 * 3, -8.0525 - 1.9748 / 2], [50 + 3 *3, -8.0525 + 1.9748 / 2],
            [50 + 3 * 4, -8.0525 - 1.9748 / 2], [50 + 3 *4, -8.0525 + 1.9748 / 2],
            [75.5 + 2.75 * 0, -4.8315 - 2.52 / 2], [50 + 2.75 * 0, -4.8315 + 2.52 / 2],
            [75.5 + 2.75 * 1, -4.8315 - 2.52 / 2], [50 + 2.75 * 1, -4.8315 + 2.52 / 2],
            [75.5 + 2.75 * 2, -4.8315 - 2.52 / 2], [50 + 2.75 * 2, -4.8315 + 2.52 / 2],
            [75.5 + 2.75 * 3, -4.8315 - 2.52 / 2], [50 + 2.75 * 3, -4.8315 + 2.52 / 2],
            [75.5 + 2.75 * 4, -4.8315 - 2.52 / 2], [50 + 2.75 * 4, -4.8315 + 2.52 / 2],
            [99 + 3 * 0, -8.0525 - 3 / 2], [99 + 3 * 0, -8.0525 + 3 / 2],
            [99 + 3 * 1, -8.0525 - 3 / 2], [99 + 3 * 1, -8.0525 + 3 / 2],
            [99 + 3 * 2, -8.0525 - 3 / 2], [99 + 3 * 2, -8.0525 + 3 / 2],
            [99 + 3 * 3, -8.0525 - 3 / 2], [99 + 3 * 3, -8.0525 + 3 / 2],
            [99 + 3 * 4, -8.0525 - 3 / 2], [99 + 3 * 4, -8.0525 + 3 / 2]
        ])
        return cones